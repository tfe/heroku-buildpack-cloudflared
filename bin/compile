#!/bin/bash

set -euf -o pipefail

# Indent in Heroku push style
# https://devcenter.heroku.com/articles/buildpack-api#bin-compile-example
indent() {
  sed -e 's/^/       /'
}

# 1. Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3


# 2. Copy cloudflared binary and wrapper

echo "-----> Installing cloudflared…"

mkdir -p $BUILD_DIR/vendor/cloudflared/bin
mkdir -p $BUILD_DIR/bin

cp ./cloudflared $BUILD_DIR/vendor/cloudflared/bin/cloudflared
cp ./cloudflare $BUILD_DIR/vendor/cloudflared/bin/cloudflare

chmod +x $BUILD_DIR/vendor/cloudflared/bin/cloudflared
chmod +x $BUILD_DIR/vendor/cloudflared/bin/cloudflare

ln -s "../vendor/cloudflared/bin/cloudflared" $BUILD_DIR/bin/cloudflared
ln -s "../vendor/cloudflared/bin/cloudflare" $BUILD_DIR/bin/cloudflare

echo "Done" | indent


# 3. Copy tunnel credentials from ENV_DIR files to Cloudflare credentials JSON file

export_env_var() {
  printf "       $1"
  if [ -f $ENV_DIR/$1 ]; then
    export "$1=$(cat $ENV_DIR/$1)"
    echo " ✔"
  else
    echo " ✘"
    exit 1
  fi
}

echo "-----> Copying tunnel credentials..."

export_env_var "CF_TUNNEL_ID"
export_env_var "CF_TUNNEL_NAME"
export_env_var "CF_TUNNEL_SECRET"
export_env_var "CF_ACCOUNT_TAG"

echo "Writing credentials JSON file" | indent

mkdir -p $BUILD_DIR/.cloudflared

# Construct and write Cloudflare's expected credentials JSON File
jq -n \
  --arg CF_TUNNEL_ID $CF_TUNNEL_ID \
  --arg CF_TUNNEL_NAME $CF_TUNNEL_NAME \
  --arg CF_TUNNEL_SECRET $CF_TUNNEL_SECRET \
  --arg CF_ACCOUNT_TAG $CF_ACCOUNT_TAG \
  '
    {
      "AccountTag": $CF_ACCOUNT_TAG,
      "TunnelSecret": $CF_TUNNEL_SECRET,
      "TunnelID": $CF_TUNNEL_ID,
      "TunnelName": $CF_TUNNEL_NAME
    }
  ' \
  > $BUILD_DIR/.cloudflared/${CF_TUNNEL_ID}.json

echo "Done" | indent
